var p=Object.defineProperty;var f=(l,t,r)=>t in l?p(l,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):l[t]=r;var o=(l,t,r)=>f(l,typeof t!="symbol"?t+"":t,r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const e of i)if(e.type==="childList")for(const n of e.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function r(i){const e={};return i.integrity&&(e.integrity=i.integrity),i.referrerPolicy&&(e.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?e.credentials="include":i.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function s(i){if(i.ep)return;i.ep=!0;const e=r(i);fetch(i.href,e)}})();class u{constructor(t){o(this,"offset");o(this,"viewPane");o(this,"app");o(this,"tileMap");this.offset={x:0,y:0},this.app=t,this.tileMap=new Map,this.viewPane=document.createElement("div"),this.app.appContainer.appendChild(this.viewPane)}setOffset(t){this.offset.x=t.x,this.offset.y=t.y,this.viewPane.style.transform=`translateX(${this.offset.x}px) translateY(${this.offset.y}px)`}setVisibleTiles(t){for(let r=t.startX;r<t.endX;r++)for(let s=t.startY;s<t.endY;s++)this.addTile(r,s)}addTile(t,r){const s=`${t},${r}`;if(!this.tileMap.has(s)){const i=this.createTile(t,r);this.viewPane.appendChild(i),this.tileMap.set(s,i)}}createTile(t,r){const s=document.createElement("div");return s.style.position="absolute",s.style.width=`${this.app.tileSize}px`,s.style.height=`${this.app.tileSize}px`,s.style.transform=`translateX(${this.app.tileSize*t}px) translateY(${this.app.tileSize*r}px)`,s.style.backgroundColor="blue",s.style.border="1px solid yellow",s}}class y{constructor(t){o(this,"appContainer");o(this,"mouseMoveStart");o(this,"viewport");o(this,"lastScrollOffset");o(this,"scrollOffset");o(this,"tileSize",20);o(this,"renderer");o(this,"padding",1);this.appContainer=t,this.mouseMoveStart=null,this.viewport={width:t.clientWidth,height:t.clientHeight},this.lastScrollOffset={x:0,y:0},this.scrollOffset={x:0,y:0},this.renderer=new u(this),this.addListeners(),this.viewport.width=this.appContainer.clientWidth,this.viewport.height=this.appContainer.clientHeight,this.appContainer.style.cursor="grab",this.renderer.setVisibleTiles(this.calculateVisibleTiles())}addListeners(){const t=e=>{const n="touches"in e?e.touches[0].clientX:e.clientX,a="touches"in e?e.touches[0].clientY:e.clientY;this.mouseMoveStart={x:n,y:a},this.appContainer.style.cursor="grabbing"},r=()=>{this.mouseMoveStart=null,this.lastScrollOffset={x:this.scrollOffset.x,y:this.scrollOffset.y},this.renderer.setOffset(this.scrollOffset),this.renderer.setVisibleTiles(this.calculateVisibleTiles()),this.appContainer.style.cursor="grab"},s=e=>{if(this.mouseMoveStart===null)return;const n="touches"in e?e.touches[0].clientX:e.clientX,a="touches"in e?e.touches[0].clientY:e.clientY;this.scrollOffset.x=this.lastScrollOffset.x+(n-this.mouseMoveStart.x),this.scrollOffset.y=this.lastScrollOffset.y+(a-this.mouseMoveStart.y),this.renderer.setOffset(this.scrollOffset)};this.appContainer.addEventListener("mousedown",t),this.appContainer.addEventListener("mouseup",r),this.appContainer.addEventListener("mousemove",s),this.appContainer.addEventListener("touchstart",t),this.appContainer.addEventListener("touchend",r),this.appContainer.addEventListener("touchmove",s),new ResizeObserver(e=>{this.viewport.width=e[0].contentRect.width,this.viewport.height=e[0].contentRect.height,this.renderer.setVisibleTiles(this.calculateVisibleTiles())}).observe(this.appContainer)}calculateVisibleTiles(){const t={x:this.scrollOffset.x+this.tileSize*this.padding,y:this.scrollOffset.y+this.tileSize*this.padding},r={width:this.viewport.width+this.tileSize*(2*this.padding),height:this.viewport.height+this.tileSize*(2*this.padding)},s=-t.x/this.tileSize,i=-t.y/this.tileSize,e=Math.ceil(r.width/this.tileSize),n=Math.ceil(r.height/this.tileSize),a=Math.floor(s),h=Math.floor(i),c=Math.ceil(s+e),d=Math.ceil(i+n);return{startX:a,startY:h,endX:c,endY:d}}start(){}}const v=new y(document.querySelector("#app"));v.start();
